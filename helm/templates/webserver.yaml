kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: '{{ template "airflow.fullname" .  }}-webserver'
  labels:
    module: {{ template "airflow.name" . }}
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      module: {{ template "airflow.name" . }}
      release: {{ .Release.Name }}
      app: webserver
  template:
    metadata:
      labels:
        module: {{ template "airflow.name" . }}
        release: {{ .Release.Name }}
        app: webserver
    spec:
    {{- with .Values.master.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      initContainers:
      - name: "init"
        image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
        imagePullPolicy: {{ .Values.master.image.pullPolicy }}
        volumeMounts:
        - name: airflow-configmap
          mountPath: /root/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-configmap
          mountPath: /tmp/airflow-init.sh
          subPath: airflow-init.sh
        - name: dags
          mountPath: /root/airflow/dags
        #lifecycle:
          #postStart:
            #exec:
              #command: ["/bin/bash","/tmp/airflow-init.sh"]
        command:
          - "bash"
        args:
          - "/tmp/airflow-init.sh"
      containers:
      - name: webserver
        image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag }}"
        imagePullPolicy: {{ .Values.master.image.pullPolicy }}
        ports:
        - name: webserver
          containerPort: 8080
        args: ["airflow", "webserver"]
        env:
        - name: AIRFLOW_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
      {{- if .Values.logging_backend.nfs.enable }}
        - name: logs
          mountPath: /root/airflow/logs
      {{ end }}
        - name: airflow-configmap
          mountPath: /root/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: dags
          mountPath: /root/airflow/dags
      volumes:
    {{- if .Values.logging_backend.nfs.enable }}
      - name: logs
        persistentVolumeClaim:
          claimName: '{{ template "airflow.fullname" . }}-logs'
    {{ end }}
      - name: dags
        persistentVolumeClaim:
          claimName: '{{ template "airflow.fullname" . }}-dags'
      - name: airflow-configmap
        configMap:
          name:  '{{ template "airflow.fullname" . }}'
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "airflow.fullname" .  }}
spec:
  type: NodePort
  ports:
  - port: 8080
    nodePort: 30909
  selector:
    module: {{ template "airflow.name" . }}
    release: {{ .Release.Name }}
    app: webserver
